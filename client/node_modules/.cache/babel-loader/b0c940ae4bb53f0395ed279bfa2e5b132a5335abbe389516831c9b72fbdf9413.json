{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nayu99\\\\git\\\\commonpjt_copy2\\\\src\\\\pages\\\\apply\\\\Counter.jsx\",\n  _s = $RefreshSig$();\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Counter() {\n  _s();\n  const count = useSelector(state => state.value);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        dispatch({\n          type: 'up',\n          step: 2\n        });\n      },\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), count]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_s(Counter, \"Hx8ZS0E5Jr/6DPTYqq8Q1lSknko=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Counter;\nexport default Counter;\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["useDispatch","useSelector","Counter","count","state","value","dispatch","type","step"],"sources":["C:/Users/nayu99/git/commonpjt_copy2/src/pages/apply/Counter.jsx"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux'\r\n\r\nfunction Counter() {\r\n  const count = useSelector((state) => state.value)\r\n  const dispatch = useDispatch()\r\n  return (\r\n    <div>\r\n      <button\r\n        onClick={() => {\r\n          dispatch({ type: 'up', step: 2 })\r\n        }}\r\n      >\r\n        +\r\n      </button>\r\n      {count}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Counter\r\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAAA;AAEtD,SAASC,OAAO,GAAG;EAAA;EACjB,MAAMC,KAAK,GAAGF,WAAW,CAAEG,KAAK,IAAKA,KAAK,CAACC,KAAK,CAAC;EACjD,MAAMC,QAAQ,GAAGN,WAAW,EAAE;EAC9B,oBACE;IAAA,wBACE;MACE,OAAO,EAAE,MAAM;QACbM,QAAQ,CAAC;UAAEC,IAAI,EAAE,IAAI;UAAEC,IAAI,EAAE;QAAE,CAAC,CAAC;MACnC,CAAE;MAAA,UACH;IAED;MAAA;MAAA;MAAA;IAAA,QAAS,EACRL,KAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GAfQD,OAAO;EAAA,QACAD,WAAW,EACRD,WAAW;AAAA;AAAA,KAFrBE,OAAO;AAiBhB,eAAeA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}